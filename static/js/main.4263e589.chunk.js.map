{"version":3,"sources":["logo.svg","Item_List.js","App.js","reportWebVitals.js","index.js"],"names":["Item_List","props","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,I,6BC0BAA,MAtBf,SAAmBC,GACf,IACMD,EADQC,EAAMC,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC1DX,EAAMY,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAEzC,+BAEI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,QAAS,WAC1Cd,EAAMe,WAAWZ,EAAKI,MACvBS,KAAK,gBATa,eAcrC,OACI,8BAAMjB,K,kBCddkB,IAAQC,IAAIC,K,IAiFGC,E,kDA9Eb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDqB,MAAQ,CACXpB,MAAO,GACPqB,YAAa,CACXb,KAAM,GACNF,IAAK,KAGT,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKT,WAAa,EAAKA,WAAWS,KAAhB,gBAClB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,gBAZA,E,wDAcPb,GACVe,KAAKC,SAAS,CACZL,YAAa,CACXb,KAAME,EAAEE,OAAOL,MACfD,IAAKqB,KAAKC,W,8BAIRlB,GACNA,EAAEmB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACS,MAAjBA,EAAQtB,KAAc,CACxB,IAAMyB,EAAQ,sBAAOR,KAAKL,MAAMpB,OAAlB,CAAyB8B,IACvCL,KAAKC,SAAS,CACZ1B,MAAOiC,EACPZ,YAAa,CACXb,KAAM,GACNF,IAAK,S,iCAKFA,GACT,IAAM4B,EAAgBT,KAAKL,MAAMpB,MAAMmC,QAAO,SAAAjC,GAAI,OAChDA,EAAKI,MAAQA,KACfmB,KAAKC,SAAS,CACZ1B,MAAOkC,M,gCAID1B,EAAKF,GACbyB,QAAQC,IAAI,SAASP,KAAKL,MAAMpB,OAChC,IAAMA,EAAQyB,KAAKL,MAAMpB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZyB,QAAQC,IAAI9B,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,MAGfiB,KAAKC,SAAS,CACZ1B,MAAOA,M,+BAMT,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,YAAY+B,SAAUX,KAAKD,QAApC,UACE,uBAAOpB,KAAK,OAAOiC,YAAY,aAC7B9B,MAAOkB,KAAKL,MAAMC,YAAYb,KAC9BC,SAAUgB,KAAKH,cACjB,wBAAQlB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAOyB,KAAKL,MAAMpB,MAC3Bc,WAAYW,KAAKX,WACjBH,UAAWc,KAAKd,mB,GA1ER2B,IAAMC,WCETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4263e589.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Item_List.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction Item_List(props) {\r\n    const items = props.items;\r\n    const Item_List = items.map(item => {\r\n        return <div className=\"list\" key=\"item.key\">\r\n            <p>\r\n                <input type=\"text\" id={item.key} value={item.text} onChange={(e) => {\r\n                    props.setUpdate(e.target.value, item.key)\r\n                }} />\r\n                <span>\r\n\r\n                    <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n                        props.deleteItem(item.key)\r\n                    }} icon=\"trash\" />\r\n                </span>\r\n            </p>\r\n        </div>\r\n    })\r\n    return (\r\n        <div>{Item_List}</div>\r\n\r\n    )\r\n}\r\nexport default Item_List;","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport Item_List from './Item_List'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: '',\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if (newItem.text !== \" \") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: '',\n        }\n      })\n    }\n  }\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item =>\n      item.key !== key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n    \n   \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"ToDo_List\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput} />\n            <button type=\"Submit\">Add</button>\n          </form>\n        </header>\n        <Item_List items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}></Item_List>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}